[gd_resource type="VisualShader" load_steps=70 format=2]

[ext_resource path="res://Resources/Images/Shaders/NoiseTexture.tres" type="Texture" id=1]
[ext_resource path="res://Resources/Images/Shaders/GradientTexture.tres" type="Texture" id=2]
[ext_resource path="res://Resources/Images/TestImages/5536.jpg" type="Texture" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=2]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=4]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 1.0, 1, -0.04 ]

[sub_resource type="VisualShaderNodeVectorOp" id=14]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=16]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarConstant" id=24]
constant = 0.5

[sub_resource type="VisualShaderNodeScalarUniform" id=25]
uniform_name = "Degerees"

[sub_resource type="VisualShaderNodeVectorOp" id=26]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=27]
uniform_name = "EmissionSize"

[sub_resource type="VisualShaderNodeColorUniform" id=28]
uniform_name = "EmissionColor"

[sub_resource type="VisualShaderNodeScalarUniform" id=29]
uniform_name = "DisolveStrenght"

[sub_resource type="VisualShaderNodeVec3Uniform" id=30]
uniform_name = "Rotation"

[sub_resource type="VisualShaderNodeVectorOp" id=31]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=9]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=32]

[sub_resource type="VisualShaderNodeScalarFunc" id=33]
function = 27

[sub_resource type="VisualShaderNodeScalarFunc" id=34]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=35]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=36]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=37]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=38]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=39]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=40]

[sub_resource type="VisualShaderNodeScalarOp" id=41]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=42]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=43]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeVectorCompose" id=44]

[sub_resource type="VisualShaderNodeVectorOp" id=45]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarConstant" id=46]
constant = 3.0

[sub_resource type="VisualShaderNodeScalarOp" id=47]

[sub_resource type="VisualShaderNodeVectorOp" id=48]
operator = 1

[sub_resource type="VisualShaderNodeVec3Uniform" id=49]
uniform_name = "DisolveStrenght2"

[sub_resource type="VisualShaderNodeScalarUniform" id=50]
uniform_name = "DisolveLevel"

[sub_resource type="VisualShaderNodeInput" id=51]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=52]

[sub_resource type="VisualShaderNodeScalarUniform" id=53]
uniform_name = "Fragment_TiledX"

[sub_resource type="VisualShaderNodeScalarUniform" id=54]
uniform_name = "Fragment_TiledY"

[sub_resource type="VisualShaderNodeScalarOp" id=55]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=56]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=57]

[sub_resource type="VisualShaderNodeScalarOp" id=58]

[sub_resource type="VisualShaderNodeScalarUniform" id=59]
uniform_name = "Fragment_OffsetY"

[sub_resource type="VisualShaderNodeScalarUniform" id=60]
uniform_name = "Fragment_OffsetX"

[sub_resource type="VisualShaderNodeVectorCompose" id=61]

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 9.0 ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=62]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=63]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=64]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeScalarUniform" id=65]
uniform_name = "Vertex_OffsetY"

[sub_resource type="VisualShaderNodeScalarUniform" id=66]
uniform_name = "Vertex_OffsetX"

[sub_resource type="VisualShaderNodeVectorCompose" id=67]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 1.0 ]

[sub_resource type="VisualShaderNodeInput" id=68]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=69]

[sub_resource type="VisualShaderNodeScalarUniform" id=70]
uniform_name = "Vertex_TiledX"

[sub_resource type="VisualShaderNodeScalarUniform" id=71]
uniform_name = "Vertex_TiledY"

[sub_resource type="VisualShaderNodeScalarOp" id=72]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=73]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=74]

[sub_resource type="VisualShaderNodeScalarOp" id=75]

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform float Vertex_OffsetX;
uniform float Vertex_TiledX;
uniform float Vertex_OffsetY;
uniform float Vertex_TiledY;
uniform float Fragment_OffsetX;
uniform float Fragment_TiledX;
uniform float Fragment_OffsetY;
uniform float Fragment_TiledY;
uniform float Degerees;
uniform sampler2D tex_frg_21;
uniform vec3 DisolveStrenght2;
uniform vec3 Rotation;
uniform sampler2D tex_frg_2;
uniform float DisolveLevel;
uniform float DisolveStrenght;
uniform float EmissionSize;
uniform vec4 EmissionColor : hint_color;



void vertex() {
// ScalarUniform:11
	float n_out11p0 = Vertex_OffsetX;

// ScalarUniform:4
	float n_out4p0 = Vertex_TiledX;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// ScalarOp:6
	float n_out6p0 = n_out4p0 * n_out3p0;

// ScalarOp:8
	float n_out8p0 = n_out11p0 + n_out6p0;

// ScalarUniform:10
	float n_out10p0 = Vertex_OffsetY;

// ScalarUniform:5
	float n_out5p0 = Vertex_TiledY;

// ScalarOp:7
	float n_out7p0 = n_out5p0 * n_out3p1;

// ScalarOp:9
	float n_out9p0 = n_out10p0 + n_out7p0;

// VectorCompose:12
	float n_in12p2 = 1.00000;
	vec3 n_out12p0 = vec3(n_out8p0, n_out9p0, n_in12p2);

// Output:0
	UV = n_out12p0.xy;

}

void fragment() {
// ScalarUniform:68
	float n_out68p0 = Fragment_OffsetX;

// ScalarUniform:61
	float n_out61p0 = Fragment_TiledX;

// Input:59
	vec3 n_out59p0 = vec3(UV, 0.0);

// VectorDecompose:60
	float n_out60p0 = n_out59p0.x;
	float n_out60p1 = n_out59p0.y;
	float n_out60p2 = n_out59p0.z;

// ScalarOp:63
	float n_out63p0 = n_out61p0 * n_out60p0;

// ScalarOp:65
	float n_out65p0 = n_out68p0 + n_out63p0;

// ScalarUniform:67
	float n_out67p0 = Fragment_OffsetY;

// ScalarUniform:62
	float n_out62p0 = Fragment_TiledY;

// ScalarOp:64
	float n_out64p0 = n_out62p0 * n_out60p1;

// ScalarOp:66
	float n_out66p0 = n_out67p0 + n_out64p0;

// VectorCompose:69
	float n_in69p2 = 0.00000;
	vec3 n_out69p0 = vec3(n_out65p0, n_out66p0, n_in69p2);

// Scalar:32
	float n_out32p0 = 0.500000;

// VectorOp:34
	vec3 n_out34p0 = n_out69p0 - vec3(n_out32p0);

// VectorDecompose:40
	float n_out40p0 = n_out34p0.x;
	float n_out40p1 = n_out34p0.y;
	float n_out40p2 = n_out34p0.z;

// ScalarUniform:33
	float n_out33p0 = Degerees;

// ScalarFunc:41
	float n_out41p0 = radians(n_out33p0);

// ScalarFunc:43
	float n_out43p0 = cos(n_out41p0);

// ScalarOp:44
	float n_out44p0 = n_out40p0 * n_out43p0;

// ScalarFunc:42
	float n_out42p0 = sin(n_out41p0);

// ScalarOp:45
	float n_out45p0 = n_out40p1 * n_out42p0;

// ScalarOp:48
	float n_out48p0 = n_out44p0 + n_out45p0;

// ScalarOp:50
	float n_in50p1 = 0.50000;
	float n_out50p0 = n_out48p0 + n_in50p1;

// ScalarOp:46
	float n_out46p0 = n_out40p1 * n_out43p0;

// ScalarOp:47
	float n_out47p0 = n_out40p0 * n_out42p0;

// ScalarOp:49
	float n_out49p0 = n_out46p0 - n_out47p0;

// ScalarOp:51
	float n_in51p1 = 0.50000;
	float n_out51p0 = n_out49p0 + n_in51p1;

// VectorCompose:52
	float n_in52p2 = 0.00000;
	vec3 n_out52p0 = vec3(n_out50p0, n_out51p0, n_in52p2);

// Texture:21
	vec4 tex_frg_21_read = texture(tex_frg_21, n_out52p0.xy);
	vec3 n_out21p0 = tex_frg_21_read.rgb;
	float n_out21p1 = tex_frg_21_read.a;

// VectorUniform:57
	vec3 n_out57p0 = DisolveStrenght2;

// VectorOp:56
	vec3 n_out56p0 = n_out21p0 - n_out57p0;

// Input:17
	float n_out17p0 = TIME;

// VectorUniform:38
	vec3 n_out38p0 = Rotation;

// VectorOp:39
	vec3 n_out39p0 = vec3(n_out17p0) * n_out38p0;

// VectorOp:16
	vec3 n_out16p0 = n_out69p0 + n_out39p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out16p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarUniform:58
	float n_out58p0 = DisolveLevel;

// ScalarUniform:37
	float n_out37p0 = DisolveStrenght;

// Scalar:54
	float n_out54p0 = 3.000000;

// ScalarOp:55
	float n_out55p0 = n_out37p0 + n_out54p0;

// ScalarOp:7
	float n_out7p0 = n_out58p0 / n_out55p0;

// ScalarOp:4
	float n_out4p0 = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333)) - n_out7p0;

// VectorOp:53
	vec3 n_out53p0 = n_out56p0 + vec3(n_out4p0);

// ScalarFunc:9
	float n_out9p0 = round(dot(n_out53p0, vec3(0.333333, 0.333333, 0.333333)));

// ScalarUniform:35
	float n_out35p0 = EmissionSize;

// ScalarOp:15
	float n_in15p0 = 1.00000;
	float n_out15p0 = n_in15p0 + n_out35p0;

// ScalarOp:10
	float n_in10p1 = 0.05000;
	float n_out10p0 = dot(n_out53p0, vec3(0.333333, 0.333333, 0.333333)) - n_in10p1;

// ScalarOp:11
	float n_out11p0 = n_out15p0 - n_out10p0;

// ScalarFunc:12
	float n_out12p0 = round(n_out11p0);

// ColorUniform:36
	vec3 n_out36p0 = EmissionColor.rgb;
	float n_out36p1 = EmissionColor.a;

// VectorOp:13
	vec3 n_out13p0 = vec3(n_out12p0) * n_out36p0;

// Output:0
	ALPHA = n_out9p0;
	EMISSION = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -3605.07, -742.251 )
modes/cull = 2
modes/depth_draw = 3
nodes/vertex/2/node = SubResource( 68 )
nodes/vertex/2/position = Vector2( -820, 160 )
nodes/vertex/3/node = SubResource( 69 )
nodes/vertex/3/position = Vector2( -620, 160 )
nodes/vertex/4/node = SubResource( 70 )
nodes/vertex/4/position = Vector2( -600, 80 )
nodes/vertex/5/node = SubResource( 71 )
nodes/vertex/5/position = Vector2( -600, 280 )
nodes/vertex/6/node = SubResource( 72 )
nodes/vertex/6/position = Vector2( -380, 60 )
nodes/vertex/7/node = SubResource( 73 )
nodes/vertex/7/position = Vector2( -380, 220 )
nodes/vertex/8/node = SubResource( 74 )
nodes/vertex/8/position = Vector2( -180, 60 )
nodes/vertex/9/node = SubResource( 75 )
nodes/vertex/9/position = Vector2( -180, 220 )
nodes/vertex/10/node = SubResource( 65 )
nodes/vertex/10/position = Vector2( -600, 380 )
nodes/vertex/11/node = SubResource( 66 )
nodes/vertex/11/position = Vector2( -600, 0 )
nodes/vertex/12/node = SubResource( 67 )
nodes/vertex/12/position = Vector2( 60, 180 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 7, 1, 3, 0, 6, 1, 4, 0, 6, 0, 5, 0, 7, 0, 6, 0, 8, 1, 7, 0, 9, 1, 11, 0, 8, 0, 10, 0, 9, 0, 8, 0, 12, 0, 9, 0, 12, 1, 12, 0, 0, 4 )
nodes/fragment/0/position = Vector2( 400, 0 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( -1040, -240 )
nodes/fragment/3/node = SubResource( 8 )
nodes/fragment/3/position = Vector2( -1440, 460 )
nodes/fragment/4/node = SubResource( 9 )
nodes/fragment/4/position = Vector2( -800, -20 )
nodes/fragment/6/node = SubResource( 11 )
nodes/fragment/6/position = Vector2( -1280, 400 )
nodes/fragment/7/node = SubResource( 12 )
nodes/fragment/7/position = Vector2( -1020, 0 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( -240, 20 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -620, 380 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -420, 240 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -200, 240 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 72.4016, 259.737 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -600, 180 )
nodes/fragment/16/node = SubResource( 14 )
nodes/fragment/16/position = Vector2( -1240, -320 )
nodes/fragment/17/node = SubResource( 15 )
nodes/fragment/17/position = Vector2( -1760, -280 )
nodes/fragment/21/node = SubResource( 16 )
nodes/fragment/21/position = Vector2( -660, -760 )
nodes/fragment/32/node = SubResource( 24 )
nodes/fragment/32/position = Vector2( -2520, -820 )
nodes/fragment/33/node = SubResource( 25 )
nodes/fragment/33/position = Vector2( -2520, -560 )
nodes/fragment/34/node = SubResource( 26 )
nodes/fragment/34/position = Vector2( -2220, -840 )
nodes/fragment/35/node = SubResource( 27 )
nodes/fragment/35/position = Vector2( -840, 260 )
nodes/fragment/36/node = SubResource( 28 )
nodes/fragment/36/position = Vector2( -180, 460 )
nodes/fragment/37/node = SubResource( 29 )
nodes/fragment/37/position = Vector2( -1440, 120 )
nodes/fragment/38/node = SubResource( 30 )
nodes/fragment/38/position = Vector2( -1780, -120 )
nodes/fragment/39/node = SubResource( 31 )
nodes/fragment/39/position = Vector2( -1500, -180 )
nodes/fragment/40/node = SubResource( 32 )
nodes/fragment/40/position = Vector2( -2040, -820 )
nodes/fragment/41/node = SubResource( 33 )
nodes/fragment/41/position = Vector2( -2320, -560 )
nodes/fragment/42/node = SubResource( 34 )
nodes/fragment/42/position = Vector2( -2100, -520 )
nodes/fragment/43/node = SubResource( 35 )
nodes/fragment/43/position = Vector2( -2100, -600 )
nodes/fragment/44/node = SubResource( 36 )
nodes/fragment/44/position = Vector2( -1700, -900 )
nodes/fragment/45/node = SubResource( 37 )
nodes/fragment/45/position = Vector2( -1700, -780 )
nodes/fragment/46/node = SubResource( 38 )
nodes/fragment/46/position = Vector2( -1700, -660 )
nodes/fragment/47/node = SubResource( 39 )
nodes/fragment/47/position = Vector2( -1700, -540 )
nodes/fragment/48/node = SubResource( 40 )
nodes/fragment/48/position = Vector2( -1420, -840 )
nodes/fragment/49/node = SubResource( 41 )
nodes/fragment/49/position = Vector2( -1420, -620 )
nodes/fragment/50/node = SubResource( 42 )
nodes/fragment/50/position = Vector2( -1220, -840 )
nodes/fragment/51/node = SubResource( 43 )
nodes/fragment/51/position = Vector2( -1220, -620 )
nodes/fragment/52/node = SubResource( 44 )
nodes/fragment/52/position = Vector2( -920, -760 )
nodes/fragment/53/node = SubResource( 45 )
nodes/fragment/53/position = Vector2( -520, -60 )
nodes/fragment/54/node = SubResource( 46 )
nodes/fragment/54/position = Vector2( -1440, 200 )
nodes/fragment/55/node = SubResource( 47 )
nodes/fragment/55/position = Vector2( -1220, 160 )
nodes/fragment/56/node = SubResource( 48 )
nodes/fragment/56/position = Vector2( -620, -440 )
nodes/fragment/57/node = SubResource( 49 )
nodes/fragment/57/position = Vector2( -900, -400 )
nodes/fragment/58/node = SubResource( 50 )
nodes/fragment/58/position = Vector2( -1440, 20 )
nodes/fragment/59/node = SubResource( 51 )
nodes/fragment/59/position = Vector2( -3720, -660 )
nodes/fragment/60/node = SubResource( 52 )
nodes/fragment/60/position = Vector2( -3520, -660 )
nodes/fragment/61/node = SubResource( 53 )
nodes/fragment/61/position = Vector2( -3500, -740 )
nodes/fragment/62/node = SubResource( 54 )
nodes/fragment/62/position = Vector2( -3500, -540 )
nodes/fragment/63/node = SubResource( 55 )
nodes/fragment/63/position = Vector2( -3280, -760 )
nodes/fragment/64/node = SubResource( 56 )
nodes/fragment/64/position = Vector2( -3280, -600 )
nodes/fragment/65/node = SubResource( 57 )
nodes/fragment/65/position = Vector2( -3080, -760 )
nodes/fragment/66/node = SubResource( 58 )
nodes/fragment/66/position = Vector2( -3080, -600 )
nodes/fragment/67/node = SubResource( 59 )
nodes/fragment/67/position = Vector2( -3500, -440 )
nodes/fragment/68/node = SubResource( 60 )
nodes/fragment/68/position = Vector2( -3500, -820 )
nodes/fragment/69/node = SubResource( 61 )
nodes/fragment/69/position = Vector2( -2800, -620 )
nodes/fragment/70/node = SubResource( 62 )
nodes/fragment/70/position = Vector2( -1430.98, -338.588 )
nodes/fragment/71/node = SubResource( 63 )
nodes/fragment/71/position = Vector2( -2440, -680 )
nodes/fragment/72/node = SubResource( 64 )
nodes/fragment/72/position = Vector2( -80, -240 )
nodes/fragment/connections = PoolIntArray( 3, 0, 6, 0, 10, 0, 11, 1, 11, 0, 12, 0, 12, 0, 13, 0, 15, 0, 11, 0, 32, 0, 34, 1, 35, 0, 15, 1, 36, 0, 13, 1, 17, 0, 39, 0, 38, 0, 39, 1, 39, 0, 16, 1, 34, 0, 40, 0, 33, 0, 41, 0, 41, 0, 43, 0, 41, 0, 42, 0, 40, 0, 44, 0, 40, 0, 47, 0, 40, 1, 45, 0, 43, 0, 44, 1, 43, 0, 46, 1, 42, 0, 45, 1, 42, 0, 47, 1, 40, 1, 46, 0, 44, 0, 48, 0, 45, 0, 48, 1, 46, 0, 49, 0, 47, 0, 49, 1, 48, 0, 50, 0, 49, 0, 51, 0, 50, 0, 52, 0, 51, 0, 52, 1, 52, 0, 21, 0, 37, 0, 55, 0, 54, 0, 55, 1, 55, 0, 7, 1, 4, 0, 53, 1, 53, 0, 9, 0, 53, 0, 10, 0, 57, 0, 56, 1, 21, 0, 56, 0, 56, 0, 53, 0, 58, 0, 7, 0, 7, 0, 4, 1, 13, 0, 0, 5, 59, 0, 60, 0, 60, 1, 64, 1, 60, 0, 63, 1, 61, 0, 63, 0, 62, 0, 64, 0, 63, 0, 65, 1, 64, 0, 66, 1, 68, 0, 65, 0, 67, 0, 66, 0, 65, 0, 69, 0, 66, 0, 69, 1, 69, 0, 72, 0, 69, 0, 34, 0, 69, 0, 16, 0, 9, 0, 0, 1, 2, 0, 4, 0, 16, 0, 2, 0 )
